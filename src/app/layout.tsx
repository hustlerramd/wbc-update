import type { Metadata, Viewport } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { fetchMetaData } from "@/helper/axios/axiosService";
import { server } from "@/model/constants/server";
import { GenerateMetadataProps } from "@/model/DTO";

// export const viewport: Viewport = {
// 	width: "device-width",
// 	initialScale: 1,
// 	maximumScale: 1,
// 	userScalable: false,
// };
// export const metadata: Metadata = {
// 	title: {
// 		template: "%s | MySite",
// 		default: "MySite",
// 	},
// 	description: "Generated by create next app",
// };

const inter = Inter({ subsets: ["latin"] });
// export async function getServerSideProps() {
// 	try {
// 		const data = await fetchMetaData("/dashboard");
// 		return {
// 			ad: { data },
// 		};
// 	} catch (error) {
// 		return {
// 			ad: { data: null }, // Handle errors gracefully
// 		};
// 	}
// }
export async function generateMetadata(): Promise<Metadata> {
	const res = await fetch(server + "meta/dashboard");
	// The return value is *not* serialized
	// You can return Date, Map, Set, etc.
	// let response = Promise.resolve(res.json());
	// console.log(server + "meta/dashboard", response);
	if (!res.ok) {
		// This will activate the closest `error.js` Error Boundary
		throw new Error("Failed to fetch data");
	}

	return res.json();
}

export default async function RootLayout({
	getSSideProps,
	children,
}: Readonly<{
	getSSideProps: Metadata;
	children: React.ReactNode;
}>) {
	return (
		<html lang="en">
			<body className={inter.className}>{children}</body>
		</html>
	);
}
